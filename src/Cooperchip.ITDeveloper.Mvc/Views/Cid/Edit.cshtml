@model Cooperchip.ITDeveloper.Domain.Entities.Cid

@{
    ViewBag.Title = "Edição da CID: [ " + Model.Diagnostico.ToUpper() + " ]";
}


@{ Layout = null; }

<div class="modal-dialog">
    <div class="modal-content">
        <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">×</span><span class="sr-only">Close</span></button>
            <h4 class="modal-title">MedicalManagement-Sys</h4>
        </div>
        <div class="modal-body">
            <div class="form-horizontal">

                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()

                    <div class="form-horizontal">
                        <h4> @ViewBag.Title </h4>
                        <hr />
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @Html.HiddenFor(model => model.Id)

                        <div class="form-group">
                            @Html.LabelFor(model => model.CidInternalId, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.CidInternalId, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.CidInternalId, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Codigo, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Codigo, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Codigo, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Diagnostico, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Diagnostico, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Diagnostico, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="Atualizar" class="btn btn-success" />
                            </div>
                        </div>
                    </div>
                }

            </div>
        </div>
        <div class="modal-footer">
            <input type="button" value="Cancelar" class="btn btn-default" data-dismiss="modal" />
        </div>

    </div><!-- /.modal-content -->
</div><!-- /.modal-dialog -->

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}